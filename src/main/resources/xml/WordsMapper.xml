<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.WordsMapper" >
  <resultMap id="BaseResultMap" type="com.entity.Words" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="works_id" property="worksId" jdbcType="BIGINT" />
    <result column="visitor" property="visitor" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="create_at" property="createAt" jdbcType="BIGINT" />
    <result column="update_at" property="updateAt" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, works_id, visitor, status, create_at, update_at, update_by, content
  </sql>
  <select id="selectByWorksId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from words
    where works_id = #{worksId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from words
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.entity.Words" >
    insert into words (id, works_id, visitor, 
      status, create_at, update_at, 
      update_by, content)
    values (#{id,jdbcType=BIGINT}, #{worksId,jdbcType=BIGINT}, #{visitor,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, 
      #{updateBy,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.Words" >
    insert into words
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="worksId != null" >
        works_id,
      </if>
      <if test="visitor != null" >
        visitor,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="worksId != null" >
        #{worksId,jdbcType=BIGINT},
      </if>
      <if test="visitor != null" >
        #{visitor,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Words" >
    update words
    <set >
      <if test="worksId != null" >
        works_id = #{worksId,jdbcType=BIGINT},
      </if>
      <if test="visitor != null" >
        visitor = #{visitor,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.Words" >
    update words
    set works_id = #{worksId,jdbcType=BIGINT},
      visitor = #{visitor,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>